require('dotenv').config();
const cloudstackAPI = require('./cloudstack-api');

async function testCloudStackConnection() {
  console.log('üß™ Test de connexion CloudStack...\n');
  
  try {
    // Test 1: V√©rifier la configuration
    console.log('üìã Configuration actuelle:');
    console.log(`   API URL: ${process.env.CLOUDSTACK_API_URL || 'Non d√©finie'}`);
    console.log(`   API Key: ${process.env.CLOUDSTACK_API_KEY ? '‚úÖ D√©finie' : '‚ùå Non d√©finie'}`);
    console.log(`   Secret Key: ${process.env.CLOUDSTACK_SECRET_KEY ? '‚úÖ D√©finie' : '‚ùå Non d√©finie'}\n`);
    
    if (!process.env.CLOUDSTACK_API_KEY || !process.env.CLOUDSTACK_SECRET_KEY) {
      console.log('‚ùå Erreur: CLOUDSTACK_API_KEY et CLOUDSTACK_SECRET_KEY doivent √™tre d√©finies dans le fichier .env');
      return;
    }
    
    // Test 2: Test de connexion simple
    console.log('üîå Test de connexion √† l\'API CloudStack...');
    const response = await cloudstackAPI.makeRequest('listCapabilities');
    
    if (response.listcapabilitiesresponse) {
      console.log('‚úÖ Connexion r√©ussie !');
      console.log(`   Version CloudStack: ${response.listcapabilitiesresponse.capability?.[0]?.version || 'Non disponible'}`);
    } else {
      console.log('‚ùå R√©ponse inattendue de l\'API');
      console.log('R√©ponse:', JSON.stringify(response, null, 2));
    }
    
    // Test 3: R√©cup√©rer les domaines
    console.log('\nüåê Test de r√©cup√©ration des domaines...');
    const domains = await cloudstackAPI.getDomains();
    console.log(`‚úÖ ${domains.length} domaines r√©cup√©r√©s`);
    
    // Test 4: R√©cup√©rer les zones
    console.log('\nüìç Test de r√©cup√©ration des zones...');
    const zones = await cloudstackAPI.makeRequest('listZones');
    if (zones.listzonesresponse?.zone) {
      console.log(`‚úÖ ${zones.listzonesresponse.zone.length} zones r√©cup√©r√©es`);
      zones.listzonesresponse.zone.forEach(zone => {
        console.log(`   - ${zone.name} (${zone.state})`);
      });
    }
    
    console.log('\nüéâ Tous les tests sont pass√©s avec succ√®s !');
    
  } catch (error) {
    console.error('\n‚ùå Erreur lors du test:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Suggestions de r√©solution:');
      console.log('   1. V√©rifiez que le serveur CloudStack est d√©marr√©');
      console.log('   2. V√©rifiez l\'URL dans CLOUDSTACK_API_URL');
      console.log('   3. V√©rifiez que le port est accessible');
    } else if (error.message.includes('CloudStack Error')) {
      console.log('\nüí° Suggestions de r√©solution:');
      console.log('   1. V√©rifiez vos cl√©s API CloudStack');
      console.log('   2. V√©rifiez les permissions de votre compte');
      console.log('   3. V√©rifiez que l\'API est activ√©e');
    }
  }
}

// Ex√©cuter le test
testCloudStackConnection();
