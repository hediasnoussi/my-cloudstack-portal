const cloudstackAPI = require('../cloudstack-api');

// R√©cup√©rer les statistiques du dashboard depuis CloudStack
const getDashboardStats = async (req, res) => {
  try {
    console.log('üìä R√©cup√©ration des statistiques CloudStack...');
    
    const stats = await cloudstackAPI.getDashboardStats();
    
    console.log('‚úÖ Statistiques r√©cup√©r√©es:', stats);
    res.json(stats);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des statistiques:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des statistiques CloudStack',
      details: error.message 
    });
  }
};

// R√©cup√©rer les domaines depuis CloudStack
const getCloudStackDomains = async (req, res) => {
  try {
    console.log('üåê R√©cup√©ration des domaines CloudStack...');
    
    const domains = await cloudstackAPI.getDomains();
    
    console.log(`‚úÖ ${domains.length} domaines r√©cup√©r√©s`);
    res.json(domains);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des domaines:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des domaines CloudStack',
      details: error.message 
    });
  }
};

// R√©cup√©rer les comptes depuis CloudStack
const getCloudStackAccounts = async (req, res) => {
  try {
    console.log('üë• R√©cup√©ration des comptes CloudStack...');
    
    const accounts = await cloudstackAPI.getAccounts();
    
    console.log(`‚úÖ ${accounts.length} comptes r√©cup√©r√©s`);
    res.json(accounts);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des comptes:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des comptes CloudStack',
      details: error.message 
    });
  }
};

// R√©cup√©rer les projets depuis CloudStack
const getCloudStackProjects = async (req, res) => {
  try {
    console.log('üìÅ R√©cup√©ration des projets CloudStack...');
    
    const projects = await cloudstackAPI.getProjects();
    
    console.log(`‚úÖ ${projects.length} projets r√©cup√©r√©s`);
    res.json(projects);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des projets:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des projets CloudStack',
      details: error.message 
    });
  }
};

// R√©cup√©rer les instances depuis CloudStack
const getCloudStackVirtualMachines = async (req, res) => {
  try {
    console.log('üñ•Ô∏è R√©cup√©ration des instances CloudStack...');
    
    const vms = await cloudstackAPI.getVirtualMachines();
    
    console.log(`‚úÖ ${vms.length} instances r√©cup√©r√©es`);
    res.json(vms);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des instances:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des instances CloudStack',
      details: error.message 
    });
  }
};

// R√©cup√©rer les volumes depuis CloudStack
const getCloudStackVolumes = async (req, res) => {
  try {
    console.log('üíæ R√©cup√©ration des volumes CloudStack...');
    
    const volumes = await cloudstackAPI.getVolumes();
    
    console.log(`‚úÖ ${volumes.length} volumes r√©cup√©r√©s`);
    res.json(volumes);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des volumes:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des volumes CloudStack',
      details: error.message 
    });
  }
};

// R√©cup√©rer les r√©seaux depuis CloudStack
const getCloudStackNetworks = async (req, res) => {
  try {
    console.log('üåê R√©cup√©ration des r√©seaux CloudStack...');
    
    const networks = await cloudstackAPI.getNetworks();
    
    console.log(`‚úÖ ${networks.length} r√©seaux r√©cup√©r√©s`);
    res.json(networks);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des r√©seaux:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des r√©seaux CloudStack',
      details: error.message 
    });
  }
};

// R√©cup√©rer les groupes de s√©curit√© depuis CloudStack
const getCloudStackSecurityGroups = async (req, res) => {
  try {
    console.log('üîí R√©cup√©ration des groupes de s√©curit√© CloudStack...');
    
    const securityGroups = await cloudstackAPI.getSecurityGroups();
    
    console.log(`‚úÖ ${securityGroups.length} groupes de s√©curit√© r√©cup√©r√©s`);
    res.json(securityGroups);
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des groupes de s√©curit√©:', error);
    res.status(500).json({ 
      error: 'Erreur lors de la r√©cup√©ration des groupes de s√©curit√© CloudStack',
      details: error.message 
    });
  }
};

module.exports = {
  getDashboardStats,
  getCloudStackDomains,
  getCloudStackAccounts,
  getCloudStackProjects,
  getCloudStackVirtualMachines,
  getCloudStackVolumes,
  getCloudStackNetworks,
  getCloudStackSecurityGroups
}; 