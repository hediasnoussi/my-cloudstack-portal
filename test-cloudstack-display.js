import axios from 'axios';

async function testCloudStackDisplay() {
  console.log('üåê Test de l\'affichage des donn√©es CloudStack...\n');
  
  try {
    // Test 1: V√©rifier que le backend fonctionne
    console.log('1Ô∏è‚É£ Test du backend...');
    const backendTest = await axios.get('http://localhost:3001/test');
    console.log('‚úÖ Backend OK:', backendTest.data);
    
    // Test 2: R√©cup√©rer les statistiques CloudStack
    console.log('\n2Ô∏è‚É£ Test des statistiques CloudStack...');
    const stats = await axios.get('http://localhost:3001/api/global/cloudstack/stats');
    console.log('‚úÖ Statistiques CloudStack:', stats.data);
    
    // Test 3: R√©cup√©rer les instances CloudStack
    console.log('\n3Ô∏è‚É£ Test des instances CloudStack...');
    const instances = await axios.get('http://localhost:3001/api/global/cloudstack/virtual-machines');
    console.log(`‚úÖ ${instances.data.length} instances CloudStack r√©cup√©r√©es`);
    
    if (instances.data.length > 0) {
      const firstInstance = instances.data[0];
      console.log('   Exemple d\'instance:', {
        name: firstInstance.name,
        state: firstInstance.state,
        cpu: firstInstance.cpunumber,
        memory: firstInstance.memory,
        template: firstInstance.templatename
      });
    }
    
    // Test 4: R√©cup√©rer les domaines CloudStack
    console.log('\n4Ô∏è‚É£ Test des domaines CloudStack...');
    const domains = await axios.get('http://localhost:3001/api/global/cloudstack/domains');
    console.log(`‚úÖ ${domains.data.length} domaines CloudStack r√©cup√©r√©s`);
    
    // Test 5: R√©cup√©rer les comptes CloudStack
    console.log('\n5Ô∏è‚É£ Test des comptes CloudStack...');
    const accounts = await axios.get('http://localhost:3001/api/global/cloudstack/accounts');
    console.log(`‚úÖ ${accounts.data.length} comptes CloudStack r√©cup√©r√©s`);
    
    // Test 6: V√©rifier que le frontend est accessible
    console.log('\n6Ô∏è‚É£ Test du frontend...');
    const frontendTest = await axios.get('http://localhost:5173');
    console.log('‚úÖ Frontend accessible (code:', frontendTest.status, ')');
    
    console.log('\nüéâ Tous les tests sont pass√©s !');
    console.log('\nüì± Vous pouvez maintenant :');
    console.log('   1. Ouvrir http://localhost:5173/cloudstack-test');
    console.log('   2. Voir les vraies donn√©es CloudStack affich√©es');
    console.log('   3. Tester les actions sur les instances');
    
  } catch (error) {
    console.error('\n‚ùå Erreur lors du test:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Suggestions :');
      console.log('   - V√©rifiez que le backend est d√©marr√© : cd backend-nodejs && npm start');
      console.log('   - V√©rifiez que le frontend est d√©marr√© : npm run dev');
    }
  }
}

testCloudStackDisplay();
